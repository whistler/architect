{"name":"Architect","tagline":"Create UML class diagrams using simple declarative language","body":"# Architect\r\n\r\nCreate UML Class diagrams using a [yUML](http://yuml.me/diagram/scruffy/class/samples)-like notation.\r\n\r\n\r\n## Installation\r\n\r\n    $ gem install uml_architect\r\n\r\n## Usage\r\n\r\n    $ architect [file ...]\r\n    \r\nThis generates a output file with a svg extension with the same base name as the\r\ninput file.\r\n\r\n## Examples\r\n\r\n### Simple Class\r\n    [User]\r\n![Simple Class](https://raw.github.com/whistler/architect/master/gh-pages/simple_class.svg)\r\n    \r\n### Class with methods and attributes\r\n    [User|+Firstname;+Lasname;-Password;|+Login();+Logout()]\r\n![Class with details](https://raw.github.com/whistler/architect/gh-pages/examples/class_with_details.svg)\r\n    \r\n### Simple Association\r\n    [User]-[Tweet]\r\n![Simple Association](https://raw.github.com/whistler/architect/gh-pages/examples/simple_association.svg)\r\n    \r\n### Composition and Aggregation\r\n    [Car]++0..1-1[Carburetor]\r\n    [Pong]+0..1-0..*[Duck]\r\n![Composition and Aggregation](https://raw.github.com/whistler/architect/gh-pages/examples/composition_and_aggregation.svg)\r\n    \r\n### Directional Association\r\n    [Order]-billing >[Address], [Order]-shipping >[Address]\r\n![Directional Association](https://raw.github.com/whistler/architect/gh-pages/examples/directional_association.svg)\r\n    \r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}